# when spider_bgs_mode=ON,and execute sql:"select * from t1 where c1>1 limit 1",each partition would execute sql:" select * from t1 where c1 > 1 limit 1".
# when one partiton get result and spider commit,the other pastitions may be executing the sql.spider commit think the work thread is wrong,free con,and make crash.
--disable_warnings
--disable_query_log
--source ../t/test_init.inc
--disable_result_log
--enable_result_log
--enable_query_log

--let $OUTPUT_CHILD_GROUP2_BACKUP= $OUTPUT_CHILD_GROUP2
--let $OUTPUT_CHILD_GROUP3_BACKUP= $OUTPUT_CHILD_GROUP3
--let $OUTPUT_CHILD_GROUP2= 1
--let $OUTPUT_CHILD_GROUP3= 1
--let $USE_GENERAL_LOG_BACKUP= $USE_GENERAL_LOG
--let $USE_GENERAL_LOG= 1

--echo
--echo drop and create databases
--connection master_1
DROP DATABASE IF EXISTS auto_test_local;
show variables like "spider_bgs_mode";
SET @old_spider_bgs_mode = @@spider_bgs_mode;
SET spider_bgs_mode = 1;
if ($USE_GENERAL_LOG)
{
    SET @old_log_output = @@global.log_output;
    SET @old_log_output1 = @@global.spider_general_log;    
    SET GLOBAL log_output = 'TABLE,FILE';
    set global spider_general_log=1;
    TRUNCATE TABLE mysql.general_log;
}
CREATE DATABASE auto_test_local;
USE auto_test_local;
if ($USE_CHILD_GROUP2)
{
  --connection child2_1
  DROP DATABASE IF EXISTS auto_test_remote;
  CREATE DATABASE auto_test_remote;
  USE auto_test_remote;

  --connection child2_2
  DROP DATABASE IF EXISTS auto_test_remote_2;
  CREATE DATABASE auto_test_remote_2;
  USE auto_test_remote_2;

  --connection child2_3
  DROP DATABASE IF EXISTS auto_test_remote_3;
  CREATE DATABASE auto_test_remote_3;
  USE auto_test_remote_3;

  --connection child3_1
  DROP DATABASE IF EXISTS auto_test_remote_4;
  CREATE DATABASE auto_test_remote_4;
  USE auto_test_remote_4;

  --connection child3_2
  DROP DATABASE IF EXISTS auto_test_remote_5;
  CREATE DATABASE auto_test_remote_5;
  USE auto_test_remote_5;

  --connection child3_3
  DROP DATABASE IF EXISTS auto_test_remote_6;
  CREATE DATABASE auto_test_remote_6;
  USE auto_test_remote_6;
}
--enable_warnings


--let $CHILD2_1_DROP_TABLES_BACKUP= $CHILD2_1_DROP_TABLES
let $CHILD2_1_DROP_TABLES=
  DROP TABLE IF EXISTS tbl_a;
--let $CHILD2_1_CREATE_TABLES_BACKUP= $CHILD2_1_CREATE_TABLES
let $CHILD2_1_CREATE_TABLES=
CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL)$CHILD2_1_ENGINE  $CHILD2_1_CHARSET;


--let $CHILD2_2_DROP_TABLES_BACKUP= $CHILD2_2_DROP_TABLES
let $CHILD2_2_DROP_TABLES=
  DROP TABLE IF EXISTS tbl_a;
--let $CHILD2_2_CREATE_TABLES_BACKUP= $CHILD2_2_CREATE_TABLES
let $CHILD2_2_CREATE_TABLES=
CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL)$CHILD2_2_ENGINE  $CHILD2_2_CHARSET;

--let $CHILD2_3_DROP_TABLES_BACKUP= $CHILD2_3_DROP_TABLES
let $CHILD2_3_DROP_TABLES=
  DROP TABLE IF EXISTS tbl_a;
--let $CHILD2_3_CREATE_TABLES_BACKUP= $CHILD2_3_CREATE_TABLES
let $CHILD2_3_CREATE_TABLES=
CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL)$CHILD2_3_ENGINE  $CHILD2_3_CHARSET;

--let $CHILD3_1_DROP_TABLES_BACKUP= $CHILD3_1_DROP_TABLES
let $CHILD3_1_DROP_TABLES=
  DROP TABLE IF EXISTS tbl_a;
--let $CHILD3_1_CREATE_TABLES_BACKUP= $CHILD3_1_CREATE_TABLES
let $CHILD3_1_CREATE_TABLES=
CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL)$CHILD3_1_ENGINE  $CHILD3_1_CHARSET;

--let $CHILD3_2_DROP_TABLES_BACKUP= $CHILD3_2_DROP_TABLES
let $CHILD3_2_DROP_TABLES=
  DROP TABLE IF EXISTS tbl_a;
--let $CHILD3_2_CREATE_TABLES_BACKUP= $CHILD3_2_CREATE_TABLES
let $CHILD3_2_CREATE_TABLES=
CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL)$CHILD3_2_ENGINE  $CHILD3_2_CHARSET;

--let $CHILD3_3_DROP_TABLES_BACKUP= $CHILD3_3_DROP_TABLES
let $CHILD3_3_DROP_TABLES=
  DROP TABLE IF EXISTS tbl_a;
--let $CHILD3_3_CREATE_TABLES_BACKUP= $CHILD3_3_CREATE_TABLES
let $CHILD3_3_CREATE_TABLES=
CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL)$CHILD3_3_ENGINE  $CHILD3_3_CHARSET;


--echo
--echo create table for child
if ($USE_CHILD_GROUP2)
{
  if (!$OUTPUT_CHILD_GROUP2)
  {
    --disable_query_log
    --disable_result_log
  }
  --connection child2_1
  if ($OUTPUT_CHILD_GROUP2)
  {
    --disable_query_log
    echo CHILD2_1_DROP_TABLES;
    echo CHILD2_1_CREATE_TABLES;
  }
  --disable_warnings
  eval $CHILD2_1_DROP_TABLES;
  --enable_warnings
  eval $CHILD2_1_CREATE_TABLES;
  if ($OUTPUT_CHILD_GROUP2)
  {
    --enable_query_log
  }
  if ($USE_GENERAL_LOG)
  {
    SET @old_log_output = @@global.log_output;
    TRUNCATE TABLE mysql.general_log;
    set global log_output = 'TABLE';
  }
  if (!$OUTPUT_CHILD_GROUP2)
  {
    --enable_query_log
    --enable_result_log
  }
}

if ($USE_CHILD_GROUP2)
{
  if (!$OUTPUT_CHILD_GROUP2)
  {
    --disable_query_log
    --disable_result_log
  }
  --connection child2_2
  if ($OUTPUT_CHILD_GROUP2)
  {
    --disable_query_log
    echo CHILD2_2_DROP_TABLES;
    echo CHILD2_2_CREATE_TABLES;
  }
  --disable_warnings
  eval $CHILD2_2_DROP_TABLES;
  --enable_warnings
  eval $CHILD2_2_CREATE_TABLES;
  if ($OUTPUT_CHILD_GROUP2)
  {
    --enable_query_log
  }
  if ($USE_GENERAL_LOG)
  {
    SET @old_log_output = @@global.log_output;
    TRUNCATE TABLE mysql.general_log;
    set global log_output = 'TABLE';
  }
  if (!$OUTPUT_CHILD_GROUP2)
  {
    --enable_query_log
    --enable_result_log
  }
}

if ($USE_CHILD_GROUP2)
{
  if (!$OUTPUT_CHILD_GROUP2)
  {
    --disable_query_log
    --disable_result_log
  }
  --connection child2_3
  if ($OUTPUT_CHILD_GROUP2)
  {
    --disable_query_log
    echo CHILD2_3_DROP_TABLES;
    echo CHILD2_3_CREATE_TABLES;
  }
  --disable_warnings
  eval $CHILD2_3_DROP_TABLES;
  --enable_warnings
  eval $CHILD2_3_CREATE_TABLES;
  if ($OUTPUT_CHILD_GROUP2)
  {
    --enable_query_log
  }
  if ($USE_GENERAL_LOG)
  {
    SET @old_log_output = @@global.log_output;
    TRUNCATE TABLE mysql.general_log;
    set global log_output = 'TABLE';
  }
  if (!$OUTPUT_CHILD_GROUP2)
  {
    --enable_query_log
    --enable_result_log
  }
}

if ($USE_CHILD_GROUP3)
{
  if (!$OUTPUT_CHILD_GROUP3)
  {
    --disable_query_log
    --disable_result_log
  }
  --connection child3_1
  if ($OUTPUT_CHILD_GROUP3)
  {
    --disable_query_log
    echo CHILD3_1_DROP_TABLES;
    echo CHILD3_1_CREATE_TABLES;
  }
  --disable_warnings
  eval $CHILD3_1_DROP_TABLES;
  --enable_warnings
  eval $CHILD3_1_CREATE_TABLES;
  if ($OUTPUT_CHILD_GROUP3)
  {
    --enable_query_log
  }
  if ($USE_GENERAL_LOG)
  {
    SET @old_log_output = @@global.log_output;
    TRUNCATE TABLE mysql.general_log;
    set global log_output = 'TABLE';
  }
  if (!$OUTPUT_CHILD_GROUP3)
  {
    --enable_query_log
    --enable_result_log
  }
}

if ($USE_CHILD_GROUP3)
{
  if (!$OUTPUT_CHILD_GROUP3)
  {
    --disable_query_log
    --disable_result_log
  }
  --connection child3_2
  if ($OUTPUT_CHILD_GROUP3)
  {
    --disable_query_log
    echo CHILD3_2_DROP_TABLES;
    echo CHILD3_2_CREATE_TABLES;
  }
  --disable_warnings
  eval $CHILD3_2_DROP_TABLES;
  --enable_warnings
  eval $CHILD3_2_CREATE_TABLES;
  if ($OUTPUT_CHILD_GROUP3)
  {
    --enable_query_log
  }
  if ($USE_GENERAL_LOG)
  {
    SET @old_log_output = @@global.log_output;
    TRUNCATE TABLE mysql.general_log;
    set global log_output = 'TABLE';
  }
  if (!$OUTPUT_CHILD_GROUP3)
  {
    --enable_query_log
    --enable_result_log
  }
}

if ($USE_CHILD_GROUP3)
{
  if (!$OUTPUT_CHILD_GROUP3)
  {
    --disable_query_log
    --disable_result_log
  }
  --connection child3_3
  if ($OUTPUT_CHILD_GROUP3)
  {
    --disable_query_log
    echo CHILD3_3_DROP_TABLES;
    echo CHILD3_3_CREATE_TABLES;
  }
  --disable_warnings
  eval $CHILD3_3_DROP_TABLES;
  --enable_warnings
  eval $CHILD3_3_CREATE_TABLES;
  if ($OUTPUT_CHILD_GROUP3)
  {
    --enable_query_log
  }
  if ($USE_GENERAL_LOG)
  {
    SET @old_log_output = @@global.log_output;
    TRUNCATE TABLE mysql.general_log;
    set global log_output = 'TABLE';
  }
  if (!$OUTPUT_CHILD_GROUP3)
  {
    --enable_query_log
    --enable_result_log
  }
}
--echo
--echo create table for master
--connection master_1
--disable_warnings
DROP TABLE IF EXISTS ta_l;
--enable_warnings
--disable_query_log
--enable_query_log
show variables like "spider_bgs_mode";
let $MASTER_1_CHARSET=DEFAULT CHARSET=utf8;
eval CREATE TABLE tbl_a
(id INT AUTO_INCREMENT PRIMARY KEY,
t INT,
start_time DATE NOT NULL, 
end_time DATE NOT NULL) $MASTER_1_ENGINE  PARTITION BY LIST (crc32(id)%6)
(PARTITION pt0 VALUES IN (0) COMMENT = 'database "auto_test_remote", table "tbl_a", srv "s_2_1",aim "0"',
 PARTITION pt1 VALUES IN (1) COMMENT = 'database "auto_test_remote_2", table "tbl_a", srv "s_2_2",aim "1"',
 PARTITION pt2 VALUES IN (2) COMMENT = 'database "auto_test_remote_3", table "tbl_a", srv "s_2_3",aim "2"',
 PARTITION pt3 VALUES IN (3) COMMENT = 'database "auto_test_remote_4", table "tbl_a", srv "s_3_1",aim "3"',
 PARTITION pt4 VALUES IN (4) COMMENT = 'database "auto_test_remote_5", table "tbl_a", srv "s_3_2",aim "4"',
 PARTITION pt5 VALUES IN (5) COMMENT = 'database "auto_test_remote_6", table "tbl_a", srv "s_3_3",aim "5"');


 INSERT INTO tbl_a(t,start_time, end_time)
VALUES(1,'1983-01-01', '1990-01-01'),
(2,'1983-01-01', '1989-06-06'),
(3,'1983-01-01', '1985-03-02'),
(4,'1983-01-01', '1992-05-05'),
(5,'1983-01-01', '1995-12-01'),
(6,'1984-01-01', '1989-06-06'),
(7,'1984-01-01', '1985-03-02'),
(8,'1984-01-01', '1992-05-05'),
(9,'1984-01-01', '1995-12-01');

#--disable_query_log
#--disable_result_log
select * from tbl_a;
if ($USE_CHILD_GROUP2)
{
  --connection child2_1
  if ($USE_GENERAL_LOG)
  {
    truncate table mysql.general_log;
  }
  --connection child2_2
  if ($USE_GENERAL_LOG)
  {
select * from tbl_a;
    truncate table mysql.general_log;
  }
  --connection child2_3
  if ($USE_GENERAL_LOG)
  {
select * from tbl_a;
    truncate table mysql.general_log;
  } 
}
if ($USE_CHILD_GROUP3)
{
  --connection child3_1
  if ($USE_GENERAL_LOG)
  {
    truncate table mysql.general_log;
  }
  --connection child3_2
  if ($USE_GENERAL_LOG)
  {
    truncate table mysql.general_log;
  }
  --connection child3_3
  if ($USE_GENERAL_LOG)
  {
    truncate table mysql.general_log;
  } 
}

--connection master_1
truncate table mysql.general_log;
--enable_query_log
--enable_result_log
select * from  tbl_a where t > 7 limit 1;

--echo
--echo select for master
if ($USE_GENERAL_LOG)
{
    #SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
    SELECT argument FROM mysql.general_log;
}
if ($USE_CHILD_GROUP2)
{
  --connection child2_1
  if ($USE_GENERAL_LOG)
  {
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
  }
  --connection child2_2
  if ($USE_GENERAL_LOG)
  {
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
  }
  --connection child2_3
  if ($USE_GENERAL_LOG)
  {
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
  } 
}
if ($USE_CHILD_GROUP3)
{
  --connection child3_1
  if ($USE_GENERAL_LOG)
  {
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
  }
  --connection child3_2
  if ($USE_GENERAL_LOG)
  {
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
  }
  --connection child3_3
  if ($USE_GENERAL_LOG)
  {
    SELECT argument FROM mysql.general_log WHERE argument LIKE '%select %';
  } 
}

--echo
--echo deinit
--disable_warnings
--connection master_1
DROP DATABASE IF EXISTS auto_test_local;
SET spider_bgs_mode = @old_spider_bgs_mode;
if ($USE_GENERAL_LOG)
{
  SET GLOBAL log_output = @old_log_output;
  SET GLOBAL spider_general_log = @old_log_output1;
}

if ($USE_CHILD_GROUP2)
{
  --connection child2_1
  DROP DATABASE IF EXISTS auto_test_remote;
  if ($USE_GENERAL_LOG)
  {
    SET GLOBAL log_output = @old_log_output;
  }
  --connection child2_2
  DROP DATABASE IF EXISTS auto_test_remote_2;
  if ($USE_GENERAL_LOG)
  {
    SET GLOBAL log_output = @old_log_output;
  }
  --connection child2_3
  DROP DATABASE IF EXISTS auto_test_remote_3;
  if ($USE_GENERAL_LOG)
  {
    SET GLOBAL log_output = @old_log_output;
  }
}
if ($USE_CHILD_GROUP3)
{
  --connection child3_1
  DROP DATABASE IF EXISTS auto_test_remote_4;
  if ($USE_GENERAL_LOG)
  {
    SET GLOBAL log_output = @old_log_output;
  }
  --connection child3_2
  DROP DATABASE IF EXISTS auto_test_remote_5;
  if ($USE_GENERAL_LOG)
  {
    SET GLOBAL log_output = @old_log_output;
  }
  --connection child3_3
  DROP DATABASE IF EXISTS auto_test_remote_6;
  if ($USE_GENERAL_LOG)
  {
    SET GLOBAL log_output = @old_log_output;
  }
}
--disable_query_log
--disable_result_log
--source test_deinit.inc
--enable_result_log
--enable_query_log
--enable_warnings
--echo
--echo end of test









